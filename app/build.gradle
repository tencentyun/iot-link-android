apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'com.google.firebase.firebase-perf'

rootProject.ext.configPath = "../app-config.json"

apply from: "../parse_json.gradle"

android {
    signingConfigs {
        config {
            storeFile file('../opensource_keystore.jks')
            storePassword '111222'
            keyAlias = 'tenextll'
            keyPassword '111222'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.tencent.iot.explorer.link.opensource"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //根据需要 自行选择添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'x86', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                XG_ACCESS_ID : '',
                XG_ACCESS_KEY: '',
                MAP_SDK_VALUE: getValueById('TencentMapSDKValue')
        ]
        buildConfigField 'String', 'WXAccessAppId', "\"${getValueById('WXAccessAppId')}\""
        buildConfigField 'String', 'TencentIotLinkAppkey', "\"${getValueById('TencentIotLinkAppkey')}\""
        buildConfigField 'String', 'TencentIotLinkAppSecret', "\"${getValueById('TencentIotLinkAppSecret')}\""
        buildConfigField 'String', 'XgAccessId', "\"${getValueById('XgAccessId')}\""
        buildConfigField 'String', 'XgAccessKey', "\"${getValueById('XgAccessKey')}\""
        buildConfigField 'String', 'XgUSAAccessId', "\"${getValueById('XgUSAAccessId')}\""
        buildConfigField 'String', 'XgUSAAccessKey', "\"${getValueById('XgUSAAccessKey')}\""
        buildConfigField 'String', 'WeatherKey', "\"${getValueById('HEweatherKey')}\""
        multiDexEnabled true
    }

    flavorDimensions "version"
    productFlavors {
        opensource {
            applicationId "com.tencent.iot.explorer.link.opensource"
            resValue("string" , "app_name_zh", "连连开源体验")
            resValue("string" , "app_name_en", "(英)连连开源体验")
        }
        //-tencentOfficial {
        //-    applicationId "com.tencent.iot.explorer.link"
        //-    resValue("string" , "app_name_zh","腾讯连连")
        //-    resValue("string" , "app_name_en","(英)腾讯连连")
        //-}
    }

    kotlinOptions { jvmTarget = 1.8}


    buildTypes {
        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
    repositories {
        flatDir { dirs 'libs' }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yyyyMMddHHmmss" , TimeZone.getTimeZone("GMT+08"))
            if(variant.buildType.name == 'debug') {
                outputFileName = "iot-link-android-debug-${date}.apk"
            }
            if(variant.buildType.name == 'release') {
                outputFileName = "iot-link-android-release-${date}.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.android.support:design:+'

    implementation 'com.android.support:multidex:1.0.1'

    //WebSocket
    implementation "org.java-websocket:Java-WebSocket:1.4.0"
    //EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //腾讯对象存储--文件上传
    implementation('com.tencent.qcloud:cosxml-lite:5.4.29') {
        exclude group: 'com.tencent.qcloud', module: 'mtaUtils' //关闭 mta上报功能
    }
    //plist文件解析
    implementation 'com.googlecode.plist:dd-plist:1.22'
    //微信登录
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //banner
    implementation 'com.youth.banner:banner:1.4.10'
    //左滑删除
    implementation 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.3.0'
    //信鸽推送
    implementation 'com.tencent.jg:jg:1.1'
    implementation 'com.tencent.tpns:tpns:1.2.0.2-release'
    implementation 'androidx.cardview:cardview:1.0.0'
    api 'com.android.support:recyclerview-v7:29.0.0'
    //kotlin协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.4'

    //刷新
    api 'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'
    api 'com.scwang.smart:refresh-header-classics:2.0.0-alpha-1'
    api 'com.scwang.smart:refresh-footer-classics:2.0.0-alpha-1'

    //腾讯地图定位
    implementation 'com.tencent.map.geolocation:TencentLocationSdk-openplatform:7.2.4'
    //2D地图 这里始终使用最新的稳定版本，用户也可以指定 4.0.3.2 之后的地图 sdk 版本号
    implementation files('libs/TencentMapSDK_Raster_v_1.3.4.1.jar')

    //垂直TabLayout
    implementation 'q.rorbin:VerticalTabLayout:1.2.9'

    if (findProject(':sdk:explorer-link-android') != null) {
        implementation project(path: ':sdk:explorer-link-android')
    } else {
        implementation 'com.tencent.iot.explorer:explorer-link-android:+'
    }

    implementation 'com.google.firebase:firebase-analytics-ktx:17.5.0'

    // Add the Firebase Crashlytics SDK.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

    implementation 'com.google.firebase:firebase-perf:19.0.8'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'

    implementation 'com.yangy:YZxing-lib:2.2'
    implementation 'com.alibaba:fastjson:1.2.73'
    implementation "com.tencent.iot.thirdparty.android:esptouch:0.3.7.2"
    implementation "com.github.skydoves:progressview:1.0.9"
    implementation 'com.belerweb:pinyin4j:2.5.0'
    implementation 'com.tencent.map.geolocation:TencentLocationSdk-openplatform:7.2.6'
    implementation 'cn.aigestudio.wheelpicker:WheelPicker:1.1.3'
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'
    implementation 'com.github.Jay-Goo:RangeSeekBar:v3.0.0'
    if (findProject(':sdk:explorer-link-rtc') != null) {
        implementation project(path: ':sdk:explorer-link-rtc')
    } else {
        implementation 'com.tencent.iot.explorer:explorer-link-rtc:+'
    }
}
